<div class="col-lg-1 col-md-2 col-sm-3 col-4">
    <p>Since: </p>
</div>
<div class="col-lg-2 col-md-4 col-sm-6 col-8">
    <select @onchange="RaiseDateTimeSpanChanged">
        @foreach (var (title, time) in options)
        {
            <option value="@time">@title</option>
        }
    </select>
</div>
@code {
    [Parameter]
    public EventCallback<DateTime> DateTimeSpanChanged { get; set; }

    private readonly Dictionary<string, DateTime> options = new()
    {
        { "Beginning of time", DateTime.MinValue },
        { "Last 90 Days", DateTime.UtcNow.AddDays(-90) },
        { "Last 30 Days", DateTime.UtcNow.AddDays(-30) },
        { "Last 7 Days", DateTime.UtcNow.AddDays(-7) },
        { "Since Today", DateTime.UtcNow.Date },
    };

    private async Task RaiseDateTimeSpanChanged(ChangeEventArgs args)
    {
        await DateTimeSpanChanged.InvokeAsync(DateTime.Parse(args.Value!.ToString()));
    }

}