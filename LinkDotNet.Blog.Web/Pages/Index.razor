@page "/"
@using LinkDotNet.Domain
@using LinkDotNet.Infrastructure.Persistence
@using Markdig
@using X.PagedList
@using LinkDotNet.Blog.Web.Shared.Services
@inject IRepository<BlogPost> blogPostRepository
@inject AppConfiguration appConfiguration
@inject NavigationManager navigationManager
@inject IUserRecordService userRecordService

<OgData Title="@(Markdown.ToPlainText(appConfiguration.BlogName))" 
        AbsolutePreviewImageUrl="@ImageUrl"
        Description="@(Markdown.ToPlainText(appConfiguration.Introduction.Description))"></OgData>
<section class="introduction">
    <IntroductionCard Introduction="appConfiguration.Introduction"></IntroductionCard>
</section>

<section>
    <header>
        <div class="recent-posts">
            <h1>Recent Posts</h1>
        </div>
    </header>
    <div class="content px-4 my-2">
        <Virtualize Items="@currentPage.ToList()">
            <ShortBlogPost BlogPost="context" UseAlternativeStyle="@(currentLine++ % 2 != 0)"></ShortBlogPost>
        </Virtualize>
    </div>
    <BlogPostNavigation CurrentPage="@currentPage" OnPageChanged="@GetPage"></BlogPostNavigation>
</section>

@code {
    private IPagedList<BlogPost> currentPage = new PagedList<BlogPost>(null, 1, 1);
    private int currentLine;

    private string ImageUrl => appConfiguration.Introduction.BackgroundUrl.ToAbsoluteUrl(navigationManager.BaseUri);

    protected override async Task OnInitializedAsync()
    {
        currentPage = await blogPostRepository.GetAllAsync(
            p => p.IsPublished,
            b => b.UpdatedDate,
            pageSize: appConfiguration.BlogPostsPerPage);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await userRecordService.StoreUserRecordAsync();
        }
    }

    private async Task GetPage(int newPage)
    {
        currentPage = await blogPostRepository.GetAllAsync(
            p => p.IsPublished,
            b => b.UpdatedDate,
            pageSize: appConfiguration.BlogPostsPerPage,
            page: newPage);
    }
}