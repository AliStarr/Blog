@page "/searchByTag/{tag}"
@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Infrastructure.Persistence
@using LinkDotNet.Blog.Web.Features.Services
@inject IRepository<BlogPost> blogPostRepository
@inject IUserRecordService userRecordService

<PageTitle>Search for tag: @Tag</PageTitle>

<h3>All posts with Tag <em>@Tag</em></h3>

@for (var i = 0; i < blogPosts.Count; i++)
{
    <ShortBlogPost BlogPost="blogPosts[i]" UseAlternativeStyle="@(i % 2 != 0)"></ShortBlogPost>
}
@code {
    [Parameter]
    public string Tag { get; set; }
    
    IList<BlogPost> blogPosts = new List<BlogPost>();
    protected override async Task OnParametersSetAsync()
    {
        Tag = Uri.UnescapeDataString(Tag);
        blogPosts = (await blogPostRepository.GetAllAsync(
            b => b.Tags.Any(t => t.Content == Tag), 
            b => b.UpdatedDate))
            .ToList();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await userRecordService.StoreUserRecordAsync();
        }
    }
}